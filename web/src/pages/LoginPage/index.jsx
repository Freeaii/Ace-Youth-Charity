import React, {Component,Fragment} from 'react';
import './index.css'
import {message} from "antd";
import { LoadingOutlined } from '@ant-design/icons';
import {tokenCheck} from "../../dataDetection/token_check";
import jwtDecode from "jwt-decode";
import {emailCheck} from "../../dataDetection/login_data";
import axios from "axios";
import {scrollRemove} from "../../utils/scroll";

let timer
class Login extends Component {
    state={
        style:"login",
        email:"",
        password:"",
        passwordConfirmation:"",
        username:"",
        verification:"",
        disabled:false,
        checkEmail:false,
        checkEmailContent:"点击发送验证码",
        svg:{
            error:{
                d:"M827.392 195.584q65.536 65.536 97.792 147.456t32.256 167.936-32.256 167.936-97.792 147.456-147.456 98.304-167.936 32.768-168.448-32.768-147.968-98.304-98.304-147.456-32.768-167.936 32.768-167.936 98.304-147.456 147.968-97.792 168.448-32.256 167.936 32.256 147.456 97.792zM720.896 715.776q21.504-21.504 18.944-49.152t-24.064-49.152l-107.52-107.52 107.52-107.52q21.504-21.504 24.064-49.152t-18.944-49.152-51.712-21.504-51.712 21.504l-107.52 106.496-104.448-104.448q-21.504-20.48-49.152-23.04t-49.152 17.92q-21.504 21.504-21.504 52.224t21.504 52.224l104.448 104.448-104.448 104.448q-21.504 21.504-21.504 51.712t21.504 51.712 49.152 18.944 49.152-24.064l104.448-104.448 107.52 107.52q21.504 21.504 51.712 21.504t51.712-21.504z",
                fill:"#d81e06"
            },
            correct:{
                d:"M514.048 59.392q93.184 0 174.592 35.328t142.336 96.768 96.256 143.36 35.328 175.104-35.328 175.616-96.256 143.872-142.336 96.768-174.592 35.328-175.104-35.328-142.848-96.768-96.256-143.872-35.328-175.616 35.328-175.104 96.256-143.36 142.848-96.768 175.104-35.328zM795.648 423.936q18.432-18.432 19.456-45.568t-17.408-45.568-45.056-17.92-45.056 18.944l-288.768 288.768-99.328-98.304q-18.432-18.432-45.056-18.944t-45.056 17.92-18.944 43.52 17.92 43.52l142.336 143.36q18.432 18.432 48.128 17.92t48.128-18.944l-4.096 4.096z",
                fill:"#1afa29"
            }
        }
    }

    //登录函数
    login=()=>{
        let loginData={
            email:this.state.email,
            password:this.state.password
        }
        this.setState({disabled:true})
        axios.post('/api/login',loginData).then(res=>{
            let token=res.data.token;
            //存储token到localstorage
            localStorage.setItem('jwtToken',token)

            //将token设置到请求头中
            tokenCheck(token)

            //将用户信息存储到redux
            this.props.setCurrentUser({
                user:jwtDecode(token)
            })
            message.success({
                content:"登录成功",
                duration:1.5,
                onClose:()=>{
                    //重置状态
                    this.init()
                    //更改全局状态
                    this.props.changeLoginState(1)
                    //设置scroll
                    scrollRemove()
                }
            })
        },({response})=>{
            //处理错误函数
            message.error({
                content:response.data.errors,
                duration:2,
                onClose:()=>{
                    this.setState({
                        style:response.data.next?response.data.next:"login",
                        disabled:false,
                        password:""
                    })
                }
            })
        })
    }

    //关闭登录窗口函数
    close=()=>{
        scrollRemove()
        //重置组件状态
        this.init()
        //设置全局状态
        this.props.changeLoginState(-1)
    }

    //重置状态函数
    init=()=>{
        clearInterval(timer)
        this.setState({
            style:"login",
            email:"",
            password:"",
            passwordConfirmation:"",
            username:"",
            verification:"",
            disabled:false,
            checkEmailContent:"点击发送验证码",
            checkEmail:false,
        })
    }

    //保存数据函数
    save=(event,style)=>{
        switch (style) {
            case 'email':
                this.setState({email:event.target.value})
                break;
            case 'password':
                this.setState({password:event.target.value})
                break;
            case 'username':
                this.setState({username:event.target.value})
                break;
            case 'passwordConfirmation':
                this.setState({passwordConfirmation:event.target.value})
                break;
            case 'verification':
                this.setState({verification:event.target.value})
                break;
            default:
                break;
        }
    }
    //切换界面
    changeStyle=(style)=>{
        clearInterval(timer)
        this.setState({
            style,
            email:"",
            password:"",
            passwordConfirmation:"",
            username:"",
            verification:"",
            disabled:false,
            checkEmailContent:"点击发送验证码",
            checkEmail:false,
        })
    }
    //判断state中数据是否符合规定
    stateJudge=(check)=>{
        const {email,password,passwordConfirmation,username,verification}=this.state
        switch (check) {
            case 'username':
                return username.length<=8&&username.length>=1
            case 'password':
                return password.length>=8&&password.length<=16
            case 2:
                return emailCheck(email)&&password.length>=8&&password.length<=16
            case 'checkPassword':
                return password===passwordConfirmation&&this.stateJudge('password')
            case 4:
                return this.stateJudge('username')&&this.stateJudge(2)&&this.stateJudge('checkPassword')
            case 'checkVerification':
                return emailCheck(email)&&verification.length===6
            default:
                return null;
        }
    }

    //找回登录密码
    findPassword=()=>{
        this.changeStyle('findPassword')
    }

    //封装验证码发送函数
    postVerification=()=>{
        let time=60;
        timer=setInterval(()=>{
            if(time===0){
                clearInterval(timer)
                this.setState({checkEmailContent:'点击发送验证码',checkEmail:false})
            }else {
                this.setState({checkEmailContent:`${time}s后可再次发送`})
                time-=1
            }
        },1000)
    }

    //获取验证码
    getVerification=(e)=>{
        e.preventDefault();
        let {style}=this.state
        //发送请求，并且修改状态
        this.setState({checkEmail:true})
        axios.get('/api/email/verification',{params:{email:this.state.email,style}}).then(res=>{
            //验证用户存在，开始计时
            this.postVerification()
        },({response})=>{
            message.error({
                content:response.data.errors,
                duration:2.5,
                onClose:()=>{
                    this.changeStyle(style)
                }
            })
        })

    }

    //检测验证码是否正确
    checkVerification=()=>{
        let {verification,email,style}=this.state
        //点击按钮发送请求，
        this.setState({disabled:true})
        axios.post('/api/email/check',{email,verification,style}).then(res=>{
            message.success({
                content:res.data.success,
                duration:1.5,
                onClose:()=>{
                    //判断当前状态，如果是注册验证，就跳转到登录页面，如果是修改密码，就继续下一步
                    if(this.state.style==="register_final"){
                        //跳转到登陆界面
                        this.changeStyle('login')
                    }else {
                        //成功后跳转到密码修改页面
                        clearInterval(timer)
                        this.setState({
                            style:"findPassword_final",
                            verification:"",
                            disabled:false,
                            checkEmailContent:"点击发送验证码",
                        })
                    }
                }
            })
        },({response})=>{
            message.error({
                content:response.data.errors,
                duration:1.5,
                onClose:()=>{
                    this.setState({disabled:false,verification:""})
                }
            })
        })


    }
    //修改密码
    changePassword=()=>{
        let {email,password}=this.state;
        //发送请求到后端
        this.setState({disabled:true})
        axios.post('/api/login/password',{email,password}).then(res=>{
            message.success({
                content:res.data.success,
                duration:1.5,
                onClose:()=>{
                    //页面跳转到登录
                    this.changeStyle('login')
                }
            })
        },({response})=>{
           message.error({
               content:response.data.errors,
               duration:1.5,
               onClose:()=>{
                   this.setState({disabled:false})
               }
           })
        })
    }

    //注册
    register=()=>{
        //点击注册按钮并且返回请求后后开始验证邮箱，但是保存邮箱地址
        let {email,username,password}=this.state
        this.setState({disabled:true})
        axios.post('/api/register',{username,email,password}).then(res=>{
            message.success({
                content:res.data.success,
                duration:1.5,
                onClose:()=>{
                    this.setState({
                        style:"register_final",
                        disabled:false,
                    })
                }
            })
        },({response})=>{
            message.error({
                content:response.data.errors,
                duration:1.5,
                onClose:()=>{
                    this.setState({disabled:false,email:""})
                }
            })
        })
    }
    render() {
        const {verification,svg,style,email,password,passwordConfirmation,username,disabled,checkEmailContent,checkEmail}=this.state
        return (
            <div className="login_page">
                <div className="login_bg"/>
                <div className="login">
                    <div className="login_close" onClick={this.close}>
                        <svg  className="icon" viewBox="0 0 1024 1024"
                             xmlns="http://www.w3.org/2000/svg" >
                            <path
                                d="M576 512l277.333333 277.333333-64 64-277.333333-277.333333L234.666667 853.333333 170.666667 789.333333l277.333333-277.333333L170.666667 234.666667 234.666667 170.666667l277.333333 277.333333L789.333333 170.666667 853.333333 234.666667 576 512z"
                                fill="#2c2c2c" />
                        </svg>
                    </div>
                    <h1>{style==="login"?"登录到您的账户":style==="register"?"注册您的新账户":style==="findPassword"?"验证您的邮箱":"设置您的新密码"}</h1>
                    <form className="user_pwd">
                        {
                            style==="register"? <div className="input">
                                <svg className="svg1" viewBox="0 0 1024 1024"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path
                                        d="M703.400215 995.074204c-3.51915 0-7.078209-0.991584-10.240225-3.066849-30.28884-19.875676-80.136132-25.263383-97.079012-25.678846l-22.119787 0-35.287691 0.271176c-0.048095 0-0.095167 0-0.143263 0L92.740194 966.599685c-10.326183 0-18.696828-8.370645-18.696828-18.696828l0-22.467711c-0.318248-6.266727-0.910743-40.603767 21.004383-78.307484 13.716396-23.598464 33.431414-43.86095 58.598606-60.225663 30.493501-19.828604 69.116147-33.909297 114.796536-41.84913 0.233314-0.039909 0.466628-0.075725 0.700965-0.107447 0.346901-0.047072 35.499515-4.858658 71.208808-14.273075 61.894675-16.317641 67.307965-30.743188 67.345828-30.884404 0.364297-1.430582 0.89437-2.803859 1.572822-4.095271 0.50756-2.699482 1.76418-12.858866-0.63752-40.079834-6.100952-69.136613-42.120306-109.995183-71.061452-142.825916-9.127891-10.354835-17.749246-20.133549-24.387433-29.722952-28.640294-41.37227-31.296797-88.416725-31.396057-90.39887-0.01535-0.311085-0.022513-0.62217-0.022513-0.933255 0-18.779715 9.363252-27.418466 17.624403-35.041074l0.433882-0.401136c0.271176-0.25071 0.442068-0.436952 0.542352-0.556679 0.093121-1.340531-0.566912-4.743024-1.013073-7.04137-0.169869-0.873903-0.339738-1.750877-0.50142-2.632967-7.179516-38.981826-7.670703-99.19214-1.175779-137.837298 2.409886-50.813293 46.224788-89.711208 48.105624-91.356684 0.071631-0.062422 0.143263-0.12382 0.214894-0.185218 6.290263-5.338588 12.671601-11.169387 16.727986-17.636682 0.487094-0.775666 0.827855-1.37737 1.066285-1.836835-0.304945-0.786922-0.741897-1.793856-1.094938-2.608407-2.436492-5.618974-6.118348-14.109346-4.02364-25.02393 1.263783-6.589069 6.078439-18.362206 24.118304-23.173792 7.261381-1.937119 15.022135-2.333138 20.689205-2.62171l1.122567-0.058328c22.38994-1.178849 46.272883-2.176572 70.435189-0.324388 174.730557 13.396101 234.920404 78.686107 237.396805 81.459267 0.140193 0.155543 0.276293 0.314155 0.409322 0.474814 13.986549 16.756639 24.347524 37.635155 30.7964 62.055334 2.01489 7.619538 3.309372 14.016225 4.062526 20.072151 6.102998 35.464723 5.084808 71.904657 3.78214 96.269577-0.732687 13.675464-2.257413 28.030403-4.800329 45.175899-0.691755 4.656043 0.068562 5.564739 0.355087 5.906523 0.75827 0.906649 1.686409 1.892093 2.667759 2.934842 3.862981 4.099365 9.152451 9.713222 11.964496 18.721387 1.410116 4.502547 2.069125 9.360182 2.069125 15.267728 0 0.311085-0.008186 0.62217-0.022513 0.933255-0.099261 1.982144-2.755764 49.0266-31.395034 90.397846-6.639211 9.590426-15.259542 19.36914-24.387433 29.722952-28.942169 32.829709-64.960501 73.689303-71.061452 142.827963-2.4017 27.220968-1.14508 37.379329-0.63752 40.079834 0.678452 1.291412 1.208525 2.664689 1.572822 4.094248 0.036839 0.141216 5.471618 14.613836 67.648726 30.964222 35.7052 9.388834 70.557986 14.146185 70.90591 14.193257 0.303922 0.040932 0.606821 0.090051 0.908696 0.145309 46.095851 8.549723 84.956927 22.991644 115.505687 42.923602 25.252127 16.476253 44.930305 36.7019 58.489112 60.114123 21.50171 37.128619 20.626783 70.714552 20.195971 77.443813l0 22.332634c0 10.326183-8.370645 18.696828-18.696828 18.696828L775.884063 966.602755c-10.326183 0-18.696828-8.370645-18.696828-18.696828s8.370645-18.696828 18.696828-18.696828l158.188812 0L934.072875 924.897911c0-0.686638 0.00921-1.106194 0.081864-1.769296 0.104377-1.508353 1.627057-28.332279-16.349363-58.130955-10.82044-17.937534-26.589588-33.609469-46.870494-46.580898-26.100448-16.693194-59.762105-28.967752-100.05274-36.482913-4.63967-0.642636-39.012526-5.564739-75.080999-15.059997-70.761624-18.629289-87.964424-39.353286-93.189426-54.395888-4.004197-7.765871-6.245238-23.195282-2.984984-60.153008 7.18054-81.369216 49.41955-129.282458 80.260975-164.268274 8.747221-9.921977 16.301268-18.491143 21.693068-26.279526 21.120017-30.510898 24.437575-66.300009 24.765033-70.606081-0.032746-2.252297-0.260943-3.223415-0.36225-3.549849-0.248663-0.798179-1.89721-2.547009-3.490497-4.238534-1.25048-1.327228-2.667759-2.832512-4.136204-4.587482-7.950066-9.504468-10.782577-21.079084-8.66024-35.384905 2.367931-15.960507 3.781116-29.206182 4.449335-41.684378 1.951445-36.502355 0.913812-63.747883-3.363607-88.341001-0.057305-0.326435-0.105401-0.654916-0.145309-0.983397-0.531096-4.438079-1.530866-9.354042-3.14769-15.46932-4.986571-18.884093-12.726859-34.770921-23.006993-47.232744-1.714038-1.747807-15.385409-15.125489-45.883003-29.67588-54.882981-26.183336-120.791064-35.849486-166.417217-39.34817-21.934568-1.681292-44.442188-0.732687-65.614393 0.382717l-1.178849 0.060375c-1.766226 0.090051-4.735861 0.2415-7.55814 0.525979 2.447748 5.841032 5.453199 14.632255 2.296299 25.136493-1.184989 3.939729-3.003404 7.792477-5.723352 12.129248-6.732331 10.733459-15.923668 19.23611-24.054859 26.145473-1.597381 1.441838-34.223452 31.356149-35.351136 65.738213-0.028653 0.86981-0.11768 1.736551-0.267083 2.594081-5.972015 34.304294-5.568832 90.780563 0.898463 125.894292 0.140193 0.765433 0.288572 1.52575 0.435928 2.282996 1.980097 10.205433 5.294586 27.284413-10.879792 42.202171l-0.434905 0.402159c-2.086521 1.924839-4.943592 4.560876-5.41636 5.468548l0 0c0.00307 0-0.13303 0.426719-0.164752 1.584078 0.328481 4.295839 3.654226 40.060391 24.76401 70.554916 5.3918 7.788383 12.945847 16.356526 21.693068 26.279526 30.841426 34.984792 73.079412 82.899058 80.259952 164.266227 3.260254 36.95875 1.019213 52.388161-2.984984 60.154032-5.226025 15.042601-22.427802 35.766598-93.189426 54.395888-36.365232 9.574053-71.006194 14.497179-75.18947 15.074324-39.83424 6.958482-73.196069 18.883069-99.160417 35.44528-20.185738 12.876262-35.971259 28.599362-46.919613 46.732347-18.282389 30.281677-17.133216 57.860802-17.055444 59.33641 0.050142 0.543376 0.054235 0.867764 0.054235 1.433652l0 4.309142 427.01135 0 35.287691-0.271176c0.047072 0 0.095167 0 0.143263 0l22.423709 0c0.141216 0 0.280386 0.001023 0.421602 0.005117 2.895957 0.064468 71.446215 1.943258 116.949572 31.803333 8.633634 5.665023 11.039427 17.254989 5.374404 25.888624C715.458855 992.104569 709.488887 995.074204 703.400215 995.074204zM631.466905 689.8762c0.454348 0.36839 0.890276 0.757247 1.305739 1.164522C632.378671 690.653913 631.943766 690.26301 631.466905 689.8762zM414.041968 689.8762c-0.471744 0.382717-0.901533 0.768503-1.292436 1.152243C413.160901 690.626283 413.592736 690.24152 414.041968 689.8762z"
                                        fill="#8a8a8a"/>
                                </svg>
                                <input type="text" name="username" value={username} placeholder="请输入您的用户名" autoComplete="off" onChange={(e)=>this.save(e,'username')}/>
                                {
                                    username===""?null:<svg className="svg2" viewBox="0 0 1024 1024"
                                                            xmlns="http://www.w3.org/2000/svg">
                                        <path d={this.stateJudge('username')?svg.correct.d:svg.error.d}
                                              fill={this.stateJudge('username')?svg.correct.fill:svg.error.fill}
                                        />
                                    </svg>
                                }
                            </div>:null
                        }
                        {
                            style==="findPassword_final"?null:<div className="input">
                                <svg  className="svg1" viewBox="0 0 1024 1024"
                                      xmlns="http://www.w3.org/2000/svg" >
                                    <path
                                        d="M886.56 217.92H136.352C92.032 217.92 56 251.232 56 292.192V737.76c0 40.96 36.032 74.272 80.352 74.272H886.56c44.288 0 80.352-33.312 80.352-74.272V292.192c0-40.96-36.128-74.272-80.352-74.272zM109.6 737.76V301.696L346.24 520.32h-0.256L109.568 738.784v-1.024h0.032z m38.688-470.304h726.304L511.488 603.008l-363.2-335.552z m235.648 287.776l127.488 117.824L639.52 554.688l225.024 207.904H159.616l224.32-207.36zM678.24 520.32h-1.536l236.64-218.624v435.872L678.24 520.32z m0 0"
                                        fill="#8a8a8a"/>
                                </svg>
                                <input type="email" name="email" placeholder="请输入您的邮箱" disabled={style === "register_final"} autoComplete="off" value={email} onChange={(e)=>this.save(e,'email')}/>
                                {
                                    email===""?null:<svg className="svg2" viewBox="0 0 1024 1024"
                                                         xmlns="http://www.w3.org/2000/svg">
                                        <path d={emailCheck(email)?svg.correct.d:svg.error.d}
                                              fill={emailCheck(email)?svg.correct.fill:svg.error.fill}
                                        />
                                    </svg>
                                }
                            </div>
                        }
                        {
                            style==="findPassword"||style==="register_final"?null:<div className="input">
                                <svg className="svg1" viewBox="0 0 1024 1024"
                                     xmlns="http://www.w3.org/2000/svg" >
                                    <path
                                        d="M522.368 10.3936c-144.1536 0-252.9024 114.6624-252.9024 266.752l0 93.7472-8.192 0c-75.776 0-137.4464 63.3088-137.4464 141.0816l0 360.5248c0 77.7728 61.6704 141.1072 137.4464 141.1072l524.3392 0c75.776 0 137.4464-63.3344 137.4464-141.1072L923.0592 511.9744c0-77.7728-61.6704-141.0816-137.4464-141.0816l-4.5056 0c-1.2032-0.4352-2.4576-0.5632-3.712-0.768l0-93.0048C777.4464 125.0816 667.8016 10.3936 522.368 10.3936L522.368 10.3936zM522.368 52.224c123.52 0 213.248 94.592 213.248 224.9472l0 92.3648L311.3216 369.536l0-92.3648C311.3216 146.816 400.0768 52.224 522.368 52.224L522.368 52.224zM881.28 511.9744l0 360.5248c0 54.7328-42.9312 99.2768-95.616 99.2768L261.2992 971.776c-52.736 0-95.616-44.544-95.616-99.2768L165.6832 511.9744c0-54.7072 42.88-99.2512 95.616-99.2512l50.0224 0 0-1.3824 424.2688 0 0 1.3824 50.048 0C838.3488 412.7488 881.28 457.2672 881.28 511.9744L881.28 511.9744zM881.28 511.9744M518.8608 568.0384c-33.5104 0-60.672 28.0064-60.672 62.5664 0 23.1168 12.2368 43.3408 30.336 54.1696l0 102.1952c0 17.2544 13.568 31.3088 30.336 31.3088 16.7424 0 30.336-14.0544 30.336-31.3088L549.1968 684.8c18.0992-10.8288 30.3104-31.0272 30.3104-54.1696C579.456 596.0704 552.32 568.0384 518.8608 568.0384L518.8608 568.0384zM518.8608 568.0384"
                                        fill="#8a8a8a"/>
                                </svg>
                                <input type="password" name="password"  placeholder={style==="findPassword_final"?"请设置您的新密码":"请输入您的密码"} autoComplete="off" value={password} onChange={(e)=>this.save(e,'password')}/>
                                {
                                    password===""?null:<svg className="svg2" viewBox="0 0 1024 1024"
                                                            xmlns="http://www.w3.org/2000/svg">
                                        <path d={this.stateJudge('password')?svg.correct.d:svg.error.d}
                                              fill={this.stateJudge('password')?svg.correct.fill:svg.error.fill}
                                        />
                                    </svg>
                                }
                            </div>
                        }
                        {
                            style==="findPassword"||style==="register_final"?<div className="input">
                                <svg className="svg1" viewBox="0 0 1024 1024" version="1.1"
                                     xmlns="http://www.w3.org/2000/svg">
                                    <path
                                        d="M943.1 172c-2.4-0.2-245.1-25.3-413.8-147.8-5.1-3.7-11-5.6-17.3-5.6-6.2 0-12.2 1.9-17.3 5.6C326.9 146 83.3 171.8 80.9 172c-15.2 1.4-26.6 14.1-26.6 29.3 0 6.7 0.6 165.8 54.8 344.4 32.1 105.8 76.4 196.4 131.9 269.2 70.3 92.3 158.5 156 262 189.2 2.9 0.9 5.9 1.4 9 1.4s6.1-0.5 8.9-1.4c103.6-33.2 191.7-96.8 262-189.2 55.4-72.7 99.8-163.2 131.9-269.2 54.1-178.6 54.8-337.7 54.8-344.4C969.7 186.1 958.3 173.5 943.1 172zM910.1 227.2l-0.1 1.6c-2.9 58.1-13.4 174.4-51.4 299.9-66.7 220.1-183.1 360.1-346 416.1L512 945l-0.6-0.2C349 888.9 232.7 749.4 165.8 530.1c-39.8-130.5-49.4-254.2-51.8-301.4l-0.1-1.6 1.5-0.2c70.6-10.3 250.5-44.8 395.5-142.4l0.9-0.7 1 0.7C658 182.1 837.9 216.6 908.5 227L910.1 227.2z" fill="#8a8a8a"/>
                                    <path
                                        d="M641.8 351 467 580.3l-89-76.1c-5.3-4.5-12.1-7-19.1-7-8.6 0-16.8 3.7-22.4 10.3-10.5 12.3-9.1 31 3.3 41.5l112.7 96.4c5.2 4.4 12.4 7 19.6 7 0.9 0 1.8 0 2.7-0.1 8-0.8 15.4-5 20.3-11.4l193.7-254c4.8-6.3 6.8-14 5.7-21.8-1-7.8-5.1-14.7-11.3-19.5C670.1 335.6 651.6 338.1 641.8 351z" fill="#8a8a8a"/>
                                </svg>
                                <input type="text" name="verification"  placeholder="请输入验证码" autoComplete="off" value={verification} onChange={(e)=>this.save(e,'verification')}/>
                                <button onClick={this.getVerification} disabled={!emailCheck(email)||checkEmail}>{checkEmailContent}</button>
                            </div>:null
                        }
                        {
                            style==="register"||style==="findPassword_final"?<div className="input">
                                <svg className="svg1" viewBox="0 0 1024 1024"
                                     xmlns="http://www.w3.org/2000/svg" >
                                    <path
                                        d="M522.368 10.3936c-144.1536 0-252.9024 114.6624-252.9024 266.752l0 93.7472-8.192 0c-75.776 0-137.4464 63.3088-137.4464 141.0816l0 360.5248c0 77.7728 61.6704 141.1072 137.4464 141.1072l524.3392 0c75.776 0 137.4464-63.3344 137.4464-141.1072L923.0592 511.9744c0-77.7728-61.6704-141.0816-137.4464-141.0816l-4.5056 0c-1.2032-0.4352-2.4576-0.5632-3.712-0.768l0-93.0048C777.4464 125.0816 667.8016 10.3936 522.368 10.3936L522.368 10.3936zM522.368 52.224c123.52 0 213.248 94.592 213.248 224.9472l0 92.3648L311.3216 369.536l0-92.3648C311.3216 146.816 400.0768 52.224 522.368 52.224L522.368 52.224zM881.28 511.9744l0 360.5248c0 54.7328-42.9312 99.2768-95.616 99.2768L261.2992 971.776c-52.736 0-95.616-44.544-95.616-99.2768L165.6832 511.9744c0-54.7072 42.88-99.2512 95.616-99.2512l50.0224 0 0-1.3824 424.2688 0 0 1.3824 50.048 0C838.3488 412.7488 881.28 457.2672 881.28 511.9744L881.28 511.9744zM881.28 511.9744M518.8608 568.0384c-33.5104 0-60.672 28.0064-60.672 62.5664 0 23.1168 12.2368 43.3408 30.336 54.1696l0 102.1952c0 17.2544 13.568 31.3088 30.336 31.3088 16.7424 0 30.336-14.0544 30.336-31.3088L549.1968 684.8c18.0992-10.8288 30.3104-31.0272 30.3104-54.1696C579.456 596.0704 552.32 568.0384 518.8608 568.0384L518.8608 568.0384zM518.8608 568.0384"
                                        fill="#8a8a8a"/>
                                </svg>
                                <input type="password" name="passwordConfirmation"  placeholder="请确认您的密码" autoComplete="off" value={passwordConfirmation} onChange={(e)=>this.save(e,'passwordConfirmation')}/>
                                {
                                    passwordConfirmation===""?null:<svg className="svg2" viewBox="0 0 1024 1024"
                                                                        xmlns="http://www.w3.org/2000/svg">
                                        <path d={this.stateJudge('checkPassword')?svg.correct.d:svg.error.d}
                                              fill={this.stateJudge('checkPassword')?svg.correct.fill:svg.error.fill}
                                        />
                                    </svg>
                                }
                            </div>:null
                        }
                        {
                            style==='login'?<div className="find_pwd">
                                <span>忘记密码了吗？</span>
                                <p onClick={this.findPassword}>点击这里</p>
                            </div>:null
                        }
                    </form>
                    {
                        style==="login"&&password===""&&email===""?<div className="separate">
                            <div/>
                            <p>OR</p>
                            <div/>
                        </div>:null
                    }
                    <div className="login_style">
                        {
                            (password!==""||email!=="")&&style==="login"?<button className={this.stateJudge(2)?"local_login_after":"local_login_before"} disabled={!this.stateJudge(2)||disabled} onClick={this.login} >{disabled?<LoadingOutlined style={{ fontSize: 24 }}/>:'登录'}</button> :null
                        }
                        {
                            style==="register"?<button className={this.stateJudge(4)?"local_login_after":"local_login_before"} disabled={!this.stateJudge(4)||disabled} onClick={this.register}>{disabled?<LoadingOutlined style={{ fontSize: 24 }}/>:'注册'}</button>:null
                        }
                        {
                            style==="findPassword"||style==="register_final"?<button className={this.stateJudge('checkVerification')?"local_login_after":"local_login_before"} disabled={!this.stateJudge('checkVerification')||disabled} onClick={this.checkVerification}>{disabled?<LoadingOutlined style={{ fontSize: 24 }}/>:'验证'}</button> :null
                        }
                        {
                            style==="findPassword_final"?<button className={this.stateJudge('checkPassword')?"local_login_after":"local_login_before"} disabled={!this.stateJudge('checkPassword')||disabled} onClick={this.changePassword}>{disabled?<LoadingOutlined style={{ fontSize: 24 }}/>:'确认'}</button> :null
                        }
                        {
                            password===""&&email===""&&style==="login"?<Fragment>
                                <button className="use_QQ" style={{display:password===""&&email===""&&style==="login"?"":"none"}}>
                                    <svg className="icon" viewBox="0 0 1024 1024"
                                         xmlns="http://www.w3.org/2000/svg" >
                                        <path
                                            d="M943.0016 579.072a1373.696 1373.696 0 0 0-30.8224-82.9952l-30.5152-72.4992 0.0512-8.6528C881.7664 166.7072 733.184 0 512 0S142.2336 166.7072 142.2336 414.8736l0.0512 8.6016-29.9008 71.0656a1355.776 1355.776 0 0 0-31.488 84.6336c-36.5568 111.9232-39.3216 193.3824-8.0896 242.0224 16.896 26.3168 43.3664 43.8272 73.216 48.7424a118.6816 118.6816 0 0 0 13.1072 92.0576c35.4304 56.9856 102.5536 61.2352 200.9088 61.2352 56.7808 0 117.1968-2.9184 151.9104-5.9392 34.7136 3.072 95.0784 5.9392 151.9104 5.9392 98.3552 0 165.4784-4.2496 200.8576-61.1328 15.9232-25.6 21.8112-59.4944 13.1584-92.16a107.776 107.776 0 0 0 73.216-48.7424c31.1808-48.64 28.4672-130.0992-8.0896-242.1248z m-81.7152 189.7984l-0.768 0.0512c-19.8656 0-73.9328-83.6608-73.9328-83.6608 0 49.664-26.88 121.344-84.992 168.1408 21.76 6.4 48.4352 16.1792 65.536 28.2624 15.4112 10.8032 13.4656 21.8112 10.7008 26.3168-5.9904 9.6256-56.9856 12.8-113.92 12.8-58.4192 0-123.136-3.328-151.9104-6.4-28.7744 3.1232-93.4912 6.4-151.9104 6.4-56.9344 0-107.8784-3.1744-113.92-12.8-2.7648-4.4544-4.7104-15.5136 10.7008-26.3168 17.1008-12.032 43.776-21.8624 65.536-28.2624-58.112-46.848-84.992-118.4768-84.992-168.192 0 0-54.1184 83.6608-73.9328 83.6608l-0.768-0.0512c-8.96-1.024-20.6848-47.0016 15.5648-158.0544 7.5776-23.296 17.9712-50.432 28.4672-76.544l38.3488-91.136c0-1.0752-0.512-19.0464-0.512-28.2624C244.6336 259.0208 321.9456 102.4 512 102.4c190.0544 0 267.3664 156.6208 267.3664 312.4736 0 9.2672-0.4608 27.1872-0.512 28.2624l38.4 91.136c10.496 26.112 20.8896 53.248 28.4672 76.544 36.2496 111.0528 24.5248 157.0304 15.5648 158.0544z"
                                            fill="#d81e06" />
                                    </svg>
                                    <span>使用QQ登录</span>
                                </button>
                                <button className="use_QQ" >
                                    <svg  className="icon" viewBox="0 0 1213 1024"
                                          xmlns="http://www.w3.org/2000/svg"  width="48" height="48">
                                        <path
                                            d="M119.734969 914.905702l27.726077-73.223172c7.102922-18.895418 12.670077-42.891775 12.971745-54.574573-102.07365-85.810975-160.432791-206.423525-160.432791-332.274137 0-122.395136 53.258202-237.193712 149.984092-323.251507C245.475883 46.731193 371.847559 0 506.007767 0c109.834757 0 214.321755 31.071855 302.134711 89.842363 85.810975 57.426712 150.313185 139.453119 181.659284 230.913522l-77.830472 26.656526c-25.532125-74.539543-78.653204-141.729345-149.572725-189.228421C688.270388 108.518386 599.634698 82.273226 506.007767 82.273226 272.296955 82.273226 82.163529 249.397574 82.163529 454.83382c0 103.801387 49.912424 203.735933 136.957497 274.244088 23.530143 19.059964 25.011061 50.131819 22.597713 72.674683 72.126195-13.9316 88.14205-7.815957 95.985431-4.881545a470.657704 470.657704 0 0 0 168.303597 30.495943v82.273226a552.958355 552.958355 0 0 1-194.219663-34.664452c-16.728889-0.301668-72.290742 10.421275-116.142372 21.199068z"
                                            fill="#1afa29" />
                                        <path
                                            d="M1117.133292 1024l-75.746217-18.593749c-38.394172-9.461421-80.792308-17.277378-94.504513-17.551622a469.670425 469.670425 0 0 1-163.888266 29.015025c-237.330834 0-430.563218-173.815903-430.563219-387.506897S545.773159 241.883286 782.994296 241.883286s430.563218 173.815903 430.563218 387.506896c0 106.297008-48.733174 208.151263-134.105359 281.127614a186.869922 186.869922 0 0 0 10.256728 40.451003zM782.994296 324.156512c-191.970862 0-348.289992 136.930073-348.289992 305.23367s156.31913 305.23367 348.289992 305.23367a387.369774 387.369774 0 0 0 138.630386-25.175608c7.185195-2.742441 20.321487-7.761108 75.307427 2.166529-0.740459-19.197086 2.934412-42.398136 21.939527-57.865503 71.303463-57.591258 112.193256-139.453119 112.193256-224.331664 0.219395-168.358446-156.099735-305.261094-348.070596-305.261094zM385.340368 324.979244a54.848818 54.848818 0 1 1 54.848818-54.848817 54.848818 54.848818 0 0 1-54.848818 54.848817z m0-82.273226a27.424409 27.424409 0 1 0 27.424409 27.424409 27.424409 27.424409 0 0 0-27.424409-27.424409z"
                                            fill="#1afa29" />
                                        <path
                                            d="M637.644929 319.494362a54.848818 54.848818 0 1 1 54.848817-54.848817 54.848818 54.848818 0 0 1-54.848817 54.848817z m0-82.273226a27.424409 27.424409 0 1 0 27.424409 27.424409 27.424409 27.424409 0 0 0-27.424409-27.424409zM665.069338 566.314042a54.848818 54.848818 0 1 1 54.848817-54.848818 54.848818 54.848818 0 0 1-54.848817 54.848818z m0-82.273227a27.424409 27.424409 0 1 0 27.424408 27.424409 27.424409 27.424409 0 0 0-27.424408-27.424409zM917.373899 560.82916a54.848818 54.848818 0 1 1 54.848817-54.848818 54.848818 54.848818 0 0 1-54.848817 54.848818z m0-82.273227a27.424409 27.424409 0 1 0 27.424408 27.424409 27.424409 27.424409 0 0 0-27.424408-27.424409z"
                                            fill="#1afa29" />
                                    </svg>
                                    <span>使用微信登录</span>
                                </button>
                            </Fragment>:null
                        }
                    </div>
                    {
                        style==="login"||style==="register"?<div className="use_statement">
                            继续使用Ace，即表示您同意我们的<p>条款</p>和<p>隐私政策</p>
                        </div>:null
                    }
                    {
                        style==="login"?  <div className="user_register">
                            <span>没有账户？</span>
                            <p onClick={(e)=>{this.changeStyle('register')}}>注册</p>
                        </div>:null
                    }
                    {
                        style==="register"?<div className="user_register">
                            <span>已有账户？</span>
                            <p onClick={(e)=>{this.changeStyle('login')}}>登录</p>
                        </div>:null
                    }
                </div>
            </div>
        );
    }
}

export default Login;